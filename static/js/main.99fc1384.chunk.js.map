{"version":3,"sources":["constants.js","helpers.js","game.js"],"names":["elements","button","document","getElementById","counter","cursor","message","store","cursorButton","querySelector","calculateNextCost","base","rate","owned","Math","floor","pow","id","formatGeneratorOutput","clicks","seconds","toLocaleString","state","current","total","cost","output","next","generators","generator1","label","delay","generator2","generator3","generator4","generator5","generator6","generator7","generator8","generator9","generator10","generator11","generator12","generator13","generator14","generator15","generator16","messages","1","10","100","1000","10000","100000","1000000","10000000","100000000","1000000000","10000000000","100000000000","1000000000000","10000000000000","100000000000000","1000000000000000","10000000000000000","100000000000000000","1000000000000000000","10000000000000000000","100000000000000000000","Object","keys","forEach","generator","generatorElement","cloneNode","title","innerText","appendChild","views","renderCounter","renderCursor","cursorRow","renderGenerator","generatorRow","renderGenerators","renderMessage","text","key","actions","increment","number","skipTotal","disabled","decrement","updateCursor","round","updateGenerator","addEventListener","interval","callback","setInterval"],"mappings":"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","file":"static/js/main.99fc1384.chunk.js","sourcesContent":["export const EVENT_CLICK = 'click';\nexport const SELECTOR_BUTTON = 'button';\n","import { SELECTOR_BUTTON } from './constants';\n\n/**\n * Elements.\n */\nexport const elements = {\n  button: document.getElementById('button'),\n  counter: document.getElementById('counter'),\n  cursor: document.getElementById('cursor'),\n  message: document.getElementById('message'),\n  store: document.getElementById('store'),\n};\nelements.cursorButton = elements.cursor.querySelector(SELECTOR_BUTTON);\n\n/**\n * Calculates next cost of cursor or generator upgrade.\n *\n * @param {Number} base\n * @param {Number} rate\n * @param {Number} owned\n * @return {Number}\n */\nexport const calculateNextCost = (base, rate, owned) =>\n  Math.floor(base * Math.pow(rate, owned));\n\n/**\n * Gets element by id (from cache if applicable).\n *\n * @param {String} id\n * @return {HTMLElement}\n */\nexport const getElementById = id =>\n  elements[id] || (elements[id] = document.getElementById(id));\n\n/**\n * Formats generator output description.\n *\n * @example\n * // returns '1 click per 1 second'\n * formatGeneratorOutput(1, 1);\n *\n * @example\n * // returns '2 clicks per 2 seconds'\n * formatGeneratorOutput(2, 2);\n *\n * @param {Number} clicks\n * @param {Number} seconds\n * @return {String}\n */\nexport const formatGeneratorOutput = (clicks, seconds) =>\n  `${clicks.toLocaleString()} ${\n    clicks === 1 ? 'click' : 'clicks'\n  } per ${seconds.toLocaleString()} ${seconds === 1 ? 'second' : 'seconds'}`;\n","import { EVENT_CLICK, SELECTOR_BUTTON } from './constants';\nimport {\n  calculateNextCost,\n  elements,\n  formatGeneratorOutput,\n  getElementById,\n} from './helpers';\n\n/** State. */\nconst state = {};\n\nstate.clicks = {\n  current: 0,\n  total: 0,\n};\n\nstate.cursor = {\n  message: 'Upgraded cursor click power.',\n  owned: 1,\n  cost: {\n    base: 100,\n    rate: 2,\n  },\n  output: {\n    base: 2,\n    current: 1,\n  },\n};\nstate.cursor.cost.next = state.cursor.cost.base;\nstate.cursor.output.next = state.cursor.output.base;\n\n/** @see {@link https://coderpatsy.bitbucket.io/cookies/cookies.html} */\nstate.generators = {\n  generator1: {\n    label: 'Generator 1',\n    message: 'Purchased Generator 1.',\n    owned: 0,\n    delay: 10,\n    cost: {\n      base: 15,\n      rate: 1.15,\n    },\n    output: {\n      base: 1,\n      current: 0,\n    },\n  },\n\n  generator2: {\n    label: 'Generator 2',\n    message: 'Purchased Generator 2.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 100,\n      rate: 1.15,\n    },\n    output: {\n      base: 1,\n      current: 0,\n    },\n  },\n\n  generator3: {\n    label: 'Generator 3',\n    message: 'Purchased Generator 3.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 11e2, // 1,100\n      rate: 1.15,\n    },\n    output: {\n      base: 8,\n      current: 0,\n    },\n  },\n\n  generator4: {\n    label: 'Generator 4',\n    message: 'Purchased Generator 4.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 12e3, // 12,000\n      rate: 1.15,\n    },\n    output: {\n      base: 47,\n      current: 0,\n    },\n  },\n\n  generator5: {\n    label: 'Generator 5',\n    message: 'Purchased Generator 5.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 13e4, // 130,000\n      rate: 1.15,\n    },\n    output: {\n      base: 260,\n      current: 0,\n    },\n  },\n\n  generator6: {\n    label: 'Generator 6',\n    message: 'Purchased Generator 6.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 14e5, // 1,400,000\n      rate: 1.15,\n    },\n    output: {\n      base: 14e2, // 1,400\n      current: 0,\n    },\n  },\n\n  generator7: {\n    label: 'Generator 7',\n    message: 'Purchased Generator 7.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 2e7, // 20,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 78e2, // 7,800\n      current: 0,\n    },\n  },\n\n  generator8: {\n    label: 'Generator 8',\n    message: 'Purchased Generator 8.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 33e7, // 330,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 44e3, // 44,000\n      current: 0,\n    },\n  },\n\n  generator9: {\n    label: 'Generator 9',\n    message: 'Purchased Generator 9.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 51e8, // 5,100,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 26e4, // 260,000\n      current: 0,\n    },\n  },\n\n  generator10: {\n    label: 'Generator 10',\n    message: 'Purchased Generator 10.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 75e9, // 75,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 16e5, // 1,600,000\n      current: 0,\n    },\n  },\n\n  generator11: {\n    label: 'Generator 11',\n    message: 'Purchased Generator 11.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 1e12, // 1,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 1e5, // 10,000,000\n      current: 0,\n    },\n  },\n\n  generator12: {\n    label: 'Generator 12',\n    message: 'Purchased Generator 12.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 14e12, // 14,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 65e6, // 65,000,000\n      current: 0,\n    },\n  },\n\n  generator13: {\n    label: 'Generator 13',\n    message: 'Purchased Generator 13.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 17e13, // 170,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 43e7, // 430,000,000\n      current: 0,\n    },\n  },\n\n  generator14: {\n    label: 'Generator 14',\n    message: 'Purchased Generator 14.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 21e14, // 2,100,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 29e8, // 2,900,000,000\n      current: 0,\n    },\n  },\n\n  generator15: {\n    label: 'Generator 15',\n    message: 'Purchased Generator 15.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 26e15, // 26,000,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 21e9, // 21,000,000,000\n      current: 0,\n    },\n  },\n\n  generator16: {\n    label: 'Generator 16',\n    message: 'Purchased Generator 16.',\n    owned: 0,\n    delay: 1,\n    cost: {\n      base: 31e16, // 310,000,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 15e10, // 150,000,000,000\n      current: 0,\n    },\n  },\n};\n\nstate.messages = {\n  1: 'The clicking has commenced...',\n  10: 'The button has been clicked ten times.',\n  100: 'The button has been clicked one hundred times.',\n  1000: 'The button has been clicked one thousand times.',\n  10000: 'The button has been clicked ten thousand times.',\n  100000: 'The button has been clicked one hundred thousand times.',\n  1000000: 'The button has been clicked one million times.',\n  10000000: 'The button has been clicked ten million times.',\n  100000000: 'The button has been clicked one hundred million times.',\n  1000000000: 'The button has been clicked one billion times.',\n  10000000000: 'The button has been clicked ten billion times.',\n  100000000000: 'The button has been clicked one hundred billion times.',\n  1000000000000: 'The button has been clicked one trillion times.',\n  10000000000000: 'The button has been clicked ten trillion times.',\n  100000000000000: 'The button has been clicked one hundred trillion times.',\n  1000000000000000: 'The button has been clicked one quadrillion times.',\n  10000000000000000: 'The button has been clicked ten quadrillion times.',\n  100000000000000000: 'The button has been clicked one hundred quadrillion times.',\n  1000000000000000000: 'The button has been clicked one quitillion times.',\n  10000000000000000000: 'The button has been clicked ten quitillion times.',\n  100000000000000000000: 'The button has been clicked one hundred quitillion times.',\n  1000000000000000000000: 'The button has been clicked one sextillion times.',\n};\n\nObject.keys(state.generators).forEach(id => {\n  // set `next` value for generator `cost` and `output`\n  const generator = state.generators[id];\n  generator.cost.next = generator.cost.base;\n  generator.output.next = generator.output.base;\n\n  // append generator to table\n  const generatorElement = elements.cursor.cloneNode(true);\n  generatorElement.id = id;\n  const button = generatorElement.querySelector(SELECTOR_BUTTON);\n  button.title = generator.label;\n  button.innerText = generator.label;\n  elements.store.appendChild(generatorElement);\n});\n\n/** Views. */\nconst views = {\n  renderCounter: () => {\n    elements.counter.innerText = state.clicks.current.toLocaleString();\n  },\n\n  renderCursor: () => {\n    const cursorRow = elements.cursor;\n    const { cursor } = state;\n    cursorRow.querySelector('.owned').innerText = (\n      cursor.owned - 1\n    ).toLocaleString();\n    cursorRow.querySelector(\n      '.cost'\n    ).innerText = cursor.cost.next.toLocaleString();\n    cursorRow.querySelector(\n      '.output-current'\n    ).innerText = `${cursor.output.current.toLocaleString()} per click`;\n    cursorRow.querySelector(\n      '.output-next'\n    ).innerText = `${cursor.output.next.toLocaleString()} per click`;\n  },\n\n  /**\n   * @param {String} id\n   */\n  renderGenerator: id => {\n    const generator = state.generators[id];\n    const generatorRow = getElementById(id);\n    generatorRow.querySelector(\n      '.owned'\n    ).innerText = generator.owned.toLocaleString();\n    generatorRow.querySelector(\n      '.cost'\n    ).innerText = generator.cost.next.toLocaleString();\n    generatorRow.querySelector(\n      '.output-current'\n    ).innerText = formatGeneratorOutput(\n      generator.output.current,\n      generator.delay\n    );\n    generatorRow.querySelector(\n      '.output-next'\n    ).innerText = formatGeneratorOutput(generator.output.next, generator.delay);\n  },\n\n  renderGenerators: () => {\n    Object.keys(state.generators).forEach(id => {\n      views.renderGenerator(id);\n    });\n  },\n\n  /**\n   * @param {String} [text='']\n   */\n  renderMessage: (text = '') => {\n    const { total } = state.clicks;\n    let message;\n\n    if (text) {\n      message = text;\n    } else {\n      // check for exact match in messages table\n      if (state.messages[total]) {\n        message = state.messages[total];\n        delete state.messages[total];\n      } else {\n        // otherwise compare number of first message\n        for (const key in state.messages) {\n          if (total >= key) {\n            message = state.messages[key];\n            delete state.messages[key];\n          }\n          break;\n        }\n      }\n    }\n\n    if (!message) {\n      return;\n    }\n\n    message = message.toLocaleString();\n    if (message !== elements.message.innerText) {\n      elements.message.innerText = message;\n    }\n  },\n};\n\n/** Actions. */\nconst actions = {\n  /**\n   * @param {Number}  number\n   * @param {Boolean} [skipTotal=false]\n   */\n  increment: (number, skipTotal = false) => {\n    const { clicks } = state;\n    clicks.current += number;\n    if (!skipTotal) {\n      clicks.total += number;\n      views.renderMessage();\n    }\n\n    views.renderCounter();\n    elements.cursorButton.disabled = clicks.current < state.cursor.cost.next;\n\n    const { generators } = state;\n    Object.keys(generators).forEach(id => {\n      const generatorRow = getElementById(id);\n      const generatorButton = generatorRow.querySelector(SELECTOR_BUTTON);\n      generatorButton.disabled = clicks.current < generators[id].cost.next;\n    });\n  },\n\n  /**\n   * @param {Number} clicks\n   */\n  decrement: clicks => {\n    actions.increment(-clicks, true);\n  },\n\n  updateCursor: () => {\n    const { cursor } = state;\n    const { cost, output } = cursor;\n    const owned = ++cursor.owned;\n    cost.next = calculateNextCost(cost.base, cost.rate, owned - 1);\n    output.current = output.next;\n    output.next = Math.round(output.base * owned);\n    views.renderCursor();\n  },\n\n  /**\n   * @param {String} id\n   */\n  updateGenerator: id => {\n    const generator = state.generators[id];\n    const { cost, output } = generator;\n    const owned = ++generator.owned;\n    cost.next = calculateNextCost(cost.base, cost.rate, owned);\n    output.current = output.next;\n    output.next = Math.round(output.base * (owned + 1));\n    views.renderGenerator(id);\n  },\n};\n\n/** Events. */\n\n// button click\nelements.button.addEventListener(EVENT_CLICK, () => {\n  actions.increment(state.cursor.output.current);\n});\n\n// cursor upgrade\nelements.cursor\n  .querySelector(SELECTOR_BUTTON)\n  .addEventListener(EVENT_CLICK, () => {\n    if (state.clicks.current >= state.cursor.cost.next) {\n      const { cursor } = state;\n      actions.decrement(cursor.cost.next);\n      actions.updateCursor();\n      views.renderMessage(cursor.message);\n    }\n  });\n\n// generator purchase\nObject.keys(state.generators).forEach(id => {\n  const generator = state.generators[id];\n  const generatorRow = getElementById(id);\n\n  generatorRow\n    .querySelector(SELECTOR_BUTTON)\n    .addEventListener(EVENT_CLICK, () => {\n      if (state.clicks.current >= generator.cost.next) {\n        actions.decrement(generator.cost.next);\n        actions.updateGenerator(id);\n\n        if (generator.interval) {\n          generator.interval.callback = () => {\n            actions.increment(generator.output.current);\n          };\n        } else {\n          generator.interval = {\n            output: generator.output.current,\n            callback: () => {\n              actions.increment(generator.output.current);\n            },\n          };\n          setInterval(generator.interval.callback, generator.delay * 1000);\n        }\n\n        if (generator.message) {\n          views.renderMessage(generator.message);\n        }\n      }\n    });\n});\n\n/** Bootstrap. */\nviews.renderCounter();\nviews.renderCursor();\nviews.renderGenerators();\n"],"sourceRoot":""}